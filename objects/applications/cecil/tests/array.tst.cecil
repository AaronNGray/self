-- "Sun-$Revision: 9.1 $"
-- load("array.tst.cecil");

method array_tests() {
       print_line("*** array.tst.cecil ***");             
       if( array_test1() != 123 , {  print("***test1 fail***"); });
       if( array_test2() != "abc" , { print("***test2 fail***"); });
       if( array_test3() != 0 , { print("***test3 fail***"); });
       if( array_test4() != cecil_undefined , { print("***test4 fail***"); });
       if( array_test5() != 24 , { print("***test5 fail***"); });
       if( array_test6() != 6 , { print("***test6 fail***"); });
(--
       if( array_test7() != cecil_undefined , { print("***test7 fail***"); });
       if( array_test8() != cecil_undefined , { print("***test8 fail***"); });
--)
       if( array_test9() != 4, { print("***test9 fail***"); });
       if( array_test11() != 17 , { print("***test11 fail***"); });
       print_line("done");
}

method array_test1():integer { 
(--
	var a:array := concrete object isa array { length := 10 };
--)
	var a:array[integer] := new_array[integer](10);
	a!1 :=  123;
	a!1
}

-- array_test1();  
-- 123

method array_test2():string { 
(--
	var a:array := concrete object isa array 
 	         { length := 10, initial_value := 0 };
--)
	var a:array[integer] := new_array[integer](10, 0);
	set_! (a, 1, "abc");
	a!1
}

-- array_test2();
-- "abc"

method array_test3():integer { 
(--
	var a:array := concrete object isa array  
 	         { length := 10, initial_value := 0 };
--)
	var a:array[integer] := new_array[integer](10, 0);
	a!1
}

-- array_test3();
-- 0

method array_test4() { 
(--
	var a:array := concrete object isa array { length := 2 };
--)
	var a:array[integer] := new_array[integer](2);
	a!1
}

-- array_test4();
-- cecil_undefined    

method array_test5():integer { 
(--
	var a:array := concrete object isa array 
 	         { length := 10, initial_value := 2 };
--)
	var a:array[integer] := new_array[integer](10, 2);
	a!2 := 12;
	(a!1) * (a!2)
}

-- array_test5();
-- 24

method array_test6():integer { 
(--
	 var a:array := concrete object isa array 
 	         { length := 3, initial_value := 2 };
--)
	 var a:array[integer] := new_array[integer](3, 2);
	 a!0 := &(i:integer) { (a!2) * i };
	 a!1 := 3;
	 eval( a!0, a!1 )
}

-- array_test6();
-- 6

(--

method array_test7() { 
	 concrete type myArray isa array
		{ length := 5, initial_value := 1 };
	 concrete type newArray isa myArray;
	 var a:newArray := object isa newArray { length := 3 };
	 a!1
}

-- array_test7();
-- cecil_undefined
	
method array_test8() {  
	concrete type myArray isa array 
 	         { length := 5, initial_value := 1 };
	var a:myArray := object isa myArray { length := 3 };
	a!1
}

-- array_test8();
-- cecil_undefined  used to be ... "no initialize slot for inherited array !!"

--)

method array_test9():integer {  
	var myArray:array[integer] := [ 1, 2, 3, 4 ];
	myArray!3
}
	
-- array_test9();
-- 4

method array_test11():integer {  
	var myArray:array[integer] := [ 3*4 + 5 ];
	myArray!0
}
	
-- array_test11();
-- 17

(--

method array_test12() {  
	concrete object myArray inherits array 
 	         { length := 5, initial_value := 1 };
	var a := object inherits myArray { length := 3 };
	a 
}

--)
